// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: praman.proto

package pramanapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sex int32

const (
	Sex_SEX_UNKNOWN Sex = 0
	Sex_MALE        Sex = 1
	Sex_FEMALE      Sex = 2
)

// Enum value maps for Sex.
var (
	Sex_name = map[int32]string{
		0: "SEX_UNKNOWN",
		1: "MALE",
		2: "FEMALE",
	}
	Sex_value = map[string]int32{
		"SEX_UNKNOWN": 0,
		"MALE":        1,
		"FEMALE":      2,
	}
)

func (x Sex) Enum() *Sex {
	p := new(Sex)
	*p = x
	return p
}

func (x Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_praman_proto_enumTypes[0].Descriptor()
}

func (Sex) Type() protoreflect.EnumType {
	return &file_praman_proto_enumTypes[0]
}

func (x Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sex.Descriptor instead.
func (Sex) EnumDescriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{0}
}

type Unit int32

const (
	Unit_UNIT_UNKNOWN Unit = 0
	Unit_CENTIMETER   Unit = 1 // cm
	Unit_KILOGRAM     Unit = 2 // kg
	Unit_KILOCALORIE  Unit = 3 // kcal
	Unit_KILOJOULE    Unit = 4 // kJ
)

// Enum value maps for Unit.
var (
	Unit_name = map[int32]string{
		0: "UNIT_UNKNOWN",
		1: "CENTIMETER",
		2: "KILOGRAM",
		3: "KILOCALORIE",
		4: "KILOJOULE",
	}
	Unit_value = map[string]int32{
		"UNIT_UNKNOWN": 0,
		"CENTIMETER":   1,
		"KILOGRAM":     2,
		"KILOCALORIE":  3,
		"KILOJOULE":    4,
	}
)

func (x Unit) Enum() *Unit {
	p := new(Unit)
	*p = x
	return p
}

func (x Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_praman_proto_enumTypes[1].Descriptor()
}

func (Unit) Type() protoreflect.EnumType {
	return &file_praman_proto_enumTypes[1]
}

func (x Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Unit.Descriptor instead.
func (Unit) EnumDescriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{1}
}

type Timezone int32

const (
	Timezone_ASIA_TOKYO Timezone = 0 // default value
)

// Enum value maps for Timezone.
var (
	Timezone_name = map[int32]string{
		0: "ASIA_TOKYO",
	}
	Timezone_value = map[string]int32{
		"ASIA_TOKYO": 0,
	}
)

func (x Timezone) Enum() *Timezone {
	p := new(Timezone)
	*p = x
	return p
}

func (x Timezone) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Timezone) Descriptor() protoreflect.EnumDescriptor {
	return file_praman_proto_enumTypes[2].Descriptor()
}

func (Timezone) Type() protoreflect.EnumType {
	return &file_praman_proto_enumTypes[2]
}

func (x Timezone) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Timezone.Descriptor instead.
func (Timezone) EnumDescriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{2}
}

type Image_Format int32

const (
	Image_UNKNOWN Image_Format = 0
	Image_PNG     Image_Format = 1
	Image_JPEG    Image_Format = 2
)

// Enum value maps for Image_Format.
var (
	Image_Format_name = map[int32]string{
		0: "UNKNOWN",
		1: "PNG",
		2: "JPEG",
	}
	Image_Format_value = map[string]int32{
		"UNKNOWN": 0,
		"PNG":     1,
		"JPEG":    2,
	}
)

func (x Image_Format) Enum() *Image_Format {
	p := new(Image_Format)
	*p = x
	return p
}

func (x Image_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Image_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_praman_proto_enumTypes[3].Descriptor()
}

func (Image_Format) Type() protoreflect.EnumType {
	return &file_praman_proto_enumTypes[3]
}

func (x Image_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Image_Format.Descriptor instead.
func (Image_Format) EnumDescriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{2, 0}
}

type Range_Type int32

const (
	Range_CLOSED   Range_Type = 0 // [min,max]; min ≦ x ≦ max, default
	Range_OPEN     Range_Type = 1 // (min,max); min < x < max
	Range_MIN_OPEN Range_Type = 2 // (min,max]; min < x ≦ max
	Range_MAX_OPEN Range_Type = 3 // [min,max); min ≦ x < max
)

// Enum value maps for Range_Type.
var (
	Range_Type_name = map[int32]string{
		0: "CLOSED",
		1: "OPEN",
		2: "MIN_OPEN",
		3: "MAX_OPEN",
	}
	Range_Type_value = map[string]int32{
		"CLOSED":   0,
		"OPEN":     1,
		"MIN_OPEN": 2,
		"MAX_OPEN": 3,
	}
)

func (x Range_Type) Enum() *Range_Type {
	p := new(Range_Type)
	*p = x
	return p
}

func (x Range_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Range_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_praman_proto_enumTypes[4].Descriptor()
}

func (Range_Type) Type() protoreflect.EnumType {
	return &file_praman_proto_enumTypes[4]
}

func (x Range_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Range_Type.Descriptor instead.
func (Range_Type) EnumDescriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{3, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_praman_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_praman_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{0}
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  uint32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month uint32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   uint32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_praman_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_praman_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{1}
}

func (x *Date) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Date) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Date) GetDay() uint32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format Image_Format `protobuf:"varint,1,opt,name=format,proto3,enum=taomics.praman.Image_Format" json:"format,omitempty"`
	Data   []byte       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_praman_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_praman_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{2}
}

func (x *Image) GetFormat() Image_Format {
	if x != nil {
		return x.Format
	}
	return Image_UNKNOWN
}

func (x *Image) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min  float32    `protobuf:"fixed32,1,opt,name=min,proto3" json:"min,omitempty"`
	Max  float32    `protobuf:"fixed32,2,opt,name=max,proto3" json:"max,omitempty"`
	Type Range_Type `protobuf:"varint,3,opt,name=type,proto3,enum=taomics.praman.Range_Type" json:"type,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_praman_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_praman_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_praman_proto_rawDescGZIP(), []int{3}
}

func (x *Range) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Range) GetMax() float32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Range) GetType() Range_Type {
	if x != nil {
		return x.Type
	}
	return Range_CLOSED
}

var File_praman_proto protoreflect.FileDescriptor

var file_praman_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x72, 0x61, 0x6d, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x74, 0x61, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x61, 0x6d, 0x61, 0x6e, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x42, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x7b, 0x0a, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x74, 0x61, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x61, 0x6d, 0x61, 0x6e, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x28,
	0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x02, 0x22, 0x95, 0x01, 0x0a, 0x05, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x61, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x61, 0x6d, 0x61, 0x6e, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50,
	0x45, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x49, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x4e,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x58, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x03,
	0x2a, 0x2c, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x58, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x56,
	0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x45, 0x4e, 0x54,
	0x49, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x49, 0x4c, 0x4f,
	0x47, 0x52, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x49, 0x4c, 0x4f, 0x43, 0x41,
	0x4c, 0x4f, 0x52, 0x49, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x49, 0x4c, 0x4f, 0x4a,
	0x4f, 0x55, 0x4c, 0x45, 0x10, 0x04, 0x2a, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x54, 0x4f, 0x4b, 0x59, 0x4f,
	0x10, 0x00, 0x42, 0x1e, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x61, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_praman_proto_rawDescOnce sync.Once
	file_praman_proto_rawDescData = file_praman_proto_rawDesc
)

func file_praman_proto_rawDescGZIP() []byte {
	file_praman_proto_rawDescOnce.Do(func() {
		file_praman_proto_rawDescData = protoimpl.X.CompressGZIP(file_praman_proto_rawDescData)
	})
	return file_praman_proto_rawDescData
}

var file_praman_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_praman_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_praman_proto_goTypes = []any{
	(Sex)(0),          // 0: taomics.praman.Sex
	(Unit)(0),         // 1: taomics.praman.Unit
	(Timezone)(0),     // 2: taomics.praman.Timezone
	(Image_Format)(0), // 3: taomics.praman.Image.Format
	(Range_Type)(0),   // 4: taomics.praman.Range.Type
	(*Empty)(nil),     // 5: taomics.praman.Empty
	(*Date)(nil),      // 6: taomics.praman.Date
	(*Image)(nil),     // 7: taomics.praman.Image
	(*Range)(nil),     // 8: taomics.praman.Range
}
var file_praman_proto_depIdxs = []int32{
	3, // 0: taomics.praman.Image.format:type_name -> taomics.praman.Image.Format
	4, // 1: taomics.praman.Range.type:type_name -> taomics.praman.Range.Type
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_praman_proto_init() }
func file_praman_proto_init() {
	if File_praman_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_praman_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_praman_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_praman_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_praman_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_praman_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_praman_proto_goTypes,
		DependencyIndexes: file_praman_proto_depIdxs,
		EnumInfos:         file_praman_proto_enumTypes,
		MessageInfos:      file_praman_proto_msgTypes,
	}.Build()
	File_praman_proto = out.File
	file_praman_proto_rawDesc = nil
	file_praman_proto_goTypes = nil
	file_praman_proto_depIdxs = nil
}
