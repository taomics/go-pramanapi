// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: recordlog/recordlog_type.proto

package recordlog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogType int32

const (
	LogType_LOG_TYPE_UNKNOWN LogType = 0
	LogType_BodyMetrics      LogType = 1
	LogType_Sleep            LogType = 2
	LogType_Meal             LogType = 3
	LogType_AlcoholCaffeine  LogType = 4
	LogType_Tabacco          LogType = 5
	LogType_Activity         LogType = 6
	LogType_Stress           LogType = 7
	LogType_Stool            LogType = 8
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0: "LOG_TYPE_UNKNOWN",
		1: "BodyMetrics",
		2: "Sleep",
		3: "Meal",
		4: "AlcoholCaffeine",
		5: "Tabacco",
		6: "Activity",
		7: "Stress",
		8: "Stool",
	}
	LogType_value = map[string]int32{
		"LOG_TYPE_UNKNOWN": 0,
		"BodyMetrics":      1,
		"Sleep":            2,
		"Meal":             3,
		"AlcoholCaffeine":  4,
		"Tabacco":          5,
		"Activity":         6,
		"Stress":           7,
		"Stool":            8,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_recordlog_recordlog_type_proto_enumTypes[0].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_recordlog_recordlog_type_proto_enumTypes[0]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_recordlog_recordlog_type_proto_rawDescGZIP(), []int{0}
}

var File_recordlog_recordlog_type_proto protoreflect.FileDescriptor

var file_recordlog_recordlog_type_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x6c, 0x6f, 0x67, 0x2f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x18, 0x74, 0x61, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x61, 0x6d, 0x61, 0x6e,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x6c, 0x6f, 0x67, 0x2a, 0x8c, 0x01, 0x0a, 0x07, 0x4c,
	0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x4f, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x42, 0x6f, 0x64, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x65, 0x61, 0x6c,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x43, 0x61, 0x66,
	0x66, 0x65, 0x69, 0x6e, 0x65, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x61, 0x63,
	0x63, 0x6f, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x73, 0x73, 0x10, 0x07, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x74, 0x6f, 0x6f, 0x6c, 0x10, 0x08, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x2f,
	0x70, 0x72, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recordlog_recordlog_type_proto_rawDescOnce sync.Once
	file_recordlog_recordlog_type_proto_rawDescData = file_recordlog_recordlog_type_proto_rawDesc
)

func file_recordlog_recordlog_type_proto_rawDescGZIP() []byte {
	file_recordlog_recordlog_type_proto_rawDescOnce.Do(func() {
		file_recordlog_recordlog_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_recordlog_recordlog_type_proto_rawDescData)
	})
	return file_recordlog_recordlog_type_proto_rawDescData
}

var file_recordlog_recordlog_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_recordlog_recordlog_type_proto_goTypes = []any{
	(LogType)(0), // 0: taomics.praman.recordlog.LogType
}
var file_recordlog_recordlog_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_recordlog_recordlog_type_proto_init() }
func file_recordlog_recordlog_type_proto_init() {
	if File_recordlog_recordlog_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recordlog_recordlog_type_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_recordlog_recordlog_type_proto_goTypes,
		DependencyIndexes: file_recordlog_recordlog_type_proto_depIdxs,
		EnumInfos:         file_recordlog_recordlog_type_proto_enumTypes,
	}.Build()
	File_recordlog_recordlog_type_proto = out.File
	file_recordlog_recordlog_type_proto_rawDesc = nil
	file_recordlog_recordlog_type_proto_goTypes = nil
	file_recordlog_recordlog_type_proto_depIdxs = nil
}
